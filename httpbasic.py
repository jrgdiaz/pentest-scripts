from wsgiref import headers
import requests, sys, argparse, base64
from termcolor import cprint
from requests.packages.urllib3.exceptions import InsecureRequestWarning
requests.packages.urllib3.disable_warnings(InsecureRequestWarning)


if len(sys.argv) <= 1:
    print('\n%s -h for help.' % (sys.argv[0]))
    exit(0)

parser = argparse.ArgumentParser()

parser.add_argument("-url",
                    dest="url",
                    help="URL with HTTP Basic Auth",
                    action='store')

parser.add_argument("-u", "--user",
                    dest="user",
                    help="Test a single user.",
                    action='store')
parser.add_argument("-ul", "--user-list",
                    dest="userlist",
                    help="Test a list of users",
                    action='store')

parser.add_argument("-pl", "--password-list",
                    dest="password_list",
                    help="Password List",
                    action='store')

args = parser.parse_args()


def try_login(s,url,user,password,cookies):
    cprint("trying: "+user+" : "+password,"yellow")
    encoded = base64.b64encode(bytes(user+":"+password,encoding='utf-8'))
    header = {"Authorization": "Basic "+encoded.decode(encoding="utf-8")}
    pr = s.get(url, headers = header, cookies=cookies,verify=False)
    print(pr.status_code)
    print(pr.request.headers)
    if pr.status_code != 401:
        return True
    return False

def main():

    users = []
    passwords = []
    url = ''
    cookies = {}

    if args.url:
        url = args.url
    if args.user:
        users.append(args.user)
    if args.userlist:
        with open(args.userlist,"r",encoding='utf-8',errors='ignore') as f:
            for i in f.readlines():
                i = i.strip()
                users.append(i)
    if args.password_list:
        with open(args.password_list,"r",encoding='utf-8',errors='ignore') as f:
            for i in f.readlines():
                i = i.strip()
                passwords.append(i)
    for user in users:
        for password in passwords:
            s = requests.Session()
            r = s.get(url,verify=False)
            if r.status_code == 401:
                cookies = dict(r.cookies)
                if try_login(s, url, user, password, cookies):
                    cprint("[+] Password found: "+password,"green")
                    break

if __name__ == "__main__":
    main()
