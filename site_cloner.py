import sys, socketserver, http.server, ssl, requests
from requests.packages.urllib3.exceptions import InsecureRequestWarning
requests.packages.urllib3.disable_warnings(InsecureRequestWarning)

#a very basic and buggy site cloner script
#python3 site_cloner.py [url_to_clone] [ip] [port]


if len(sys.argv) != 4:

    print("[~] Usage : python3 site_cloner.py [url_to_clone] [ip] [port]")
    exit()

clone_url = sys.argv[1]
ip = sys.argv[2]
port = int(sys.argv[3])

class Handler (http.server.SimpleHTTPRequestHandler):
    def do_GET(self):
        incoming_url = self.path[1:]
        self.send_response(200)
        self.end_headers()
        print(clone_url+incoming_url)
        #proxy
        resp = requests.get(clone_url+incoming_url,verify=False)
        self.wfile.write(resp.text.encode())

    def do_POST(self):
        content_length = int(self.headers['Content-Length'])
        post_data = self.rfile.read(content_length) 
        print("POST REQUEST:\nPath: %s\nHeaders:\n%s\n\nBody:\n%s\n" % (str(self.path), str(self.headers), post_data.decode('utf-8')))


with socketserver.TCPServer((ip, port), Handler) as httpd:
        print("url: http://"+ip+":"+str(port)+"/")
        httpd.serve_forever()
